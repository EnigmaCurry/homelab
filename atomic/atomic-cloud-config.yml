#cloud-config

## Fedora Atomic kickstart for homelab.
## This whole file can be cut and paste into the User Data field on
## the droplet creation wizard.  Edit the ALL_CAPS environment
## variables below to suit your environment.
##
## Install is in two phases:
## - Upgrades docker to latest community edition
## - Installs git
## - Configures a systemd task to run only on the first reboot
## Then it reboots (the Atomic way!)
## - On first reboot, /usr/local/bin/post-install.sh is run.
##   - This enables the new docker service
##   - git clones homelab code and runs the config script
##   - post-install.sh deletes itself, so that it's not run again.
## - Follow the post-install log progress (or for errors, oops):
##   - journalctl -f --unit post-install
##   - Wait for the "Post Installation tasks Complete." message.
## - If things go really wrong, check the cloud-init log:
##   - less /var/log/cloud-init-output.log

write_files:
  - path: "/usr/local/bin/post-install.sh"
    permissions: "0750"
    content: |
      #!/bin/bash
      # Post-Install tasks to do only on the first reboot
      # This script will self destruct in 3,2,...

      # Enable the newly installed docker service:
      systemctl enable --now docker

      # Homelab config starts here:
      # You must change these to suit your domain name scheme:
      # APP_DOMAIN - The root sub-domain that homelab will manage
      export APP_DOMAIN="app.example.com"
      # TRAEFIK_HOST (the hostname of this droplet)
      export TRAEFIK_HOST="atomic.app.example.com"
      # ACME_DOMAINS - The domain name(s) to use for the SSL/TLS certificate. 
      export ACME_DOMAINS="*.app.example.com"
      # ACME_EMAIL - Your email address to send to Lets Encrypt
      export ACME_EMAIL="letsencrypt@example.com"
      # DNS_API_KEY - API key to control DNS
      # Generate a fresh API key each deployment:
      export DNS_API_KEY="generate-a-new-api-key-in-your-account"

      # These you can probably leave the default if you're on Atomic
      export HOMELAB_HOME=/var/lib/homelab
      export HOMELAB_CONF=/etc/homelab
      export HOMELAB_USER=fedora
      export HOMELAB_GIT="https://github.com/EnigmaCurry/homelab.git"

      # Download homelab
      mkdir -p $HOMELAB_HOME
      chown $HOMELAB_USER:$HOMELAB_USER $HOMELAB_HOME
      sudo -u $HOMELAB_USER git clone $HOMELAB_GIT $HOMELAB_HOME

      # Homelab handles the rest of the config itself:
      $HOMELAB_HOME/atomic/install.sh

      # Self Destruct!
      echo "Post Installation tasks Complete."
      systemctl disable post-install
      rm /etc/systemd/system/post-install.service
      shred -u /usr/local/bin/post-install.sh

  - path: "/etc/docker/daemon.json"
    content: |
      {
        "storage-driver": "overlay2"
      }
      
  - path: "/etc/systemd/system/post-install.service"
    content: |
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/post-install.sh
      [Install]
      WantedBy=multi-user.target

runcmd:
  - ln -s /etc/systemd/system/post-install.service /etc/systemd/system/multi-user.target.wants/post-install.service
  # Upgrade Docker
  - curl -o /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/fedora/docker-ce.repo
  - rpm-ostree override remove docker docker-common cockpit-docker
  # Install initial dependencies:
  - atomic host install docker-ce git
  # Reboot using the new os-tree:
  - systemctl reboot
  # post-install systemd service now finalizes setup on the first reboot. 
